import asyncio
from telethon.sync import TelegramClient, events
from telethon.tl.functions.channels import JoinChannelRequest

# Конфигурация клиентов Telegram
clients = [
    {
        'api_id': '12588062',
        'api_hash': 'd0f061c565991d6ed274285c0d032f7a',
        'phone': '+79816661471'
    },
    {
        'api_id': '13123883',
        'api_hash': 'f1fab12098570c2bf8848ad6ea23c62f',
        'phone': '+79676939873'
    }
]

chats = ['-1002054089527']
messages = ['message1', 'message2', 'message3']

async def send_message(client, chat_id, message):
    await client.send_message(chat_id, message)

async def start_sending(delay):
    while True:
        for client in clients:
            with TelegramClient('session_name', client['api_id'], client['api_hash']) as client:
                tasks = []
                for chat_id in chats:
                    for message in messages:
                        tasks.append(send_message(client, chat_id, message))
                await asyncio.gather(*tasks)
        await asyncio.sleep(delay)

# Присоединение к чатам при запуске скрипта
for client in clients:
    with TelegramClient('session_name', client['api_id'], client['api_hash']) as client:
        for chat_id in chats:
            client.invoke(JoinChannelRequest(chat_id))

# Обработчик событий для команд в Telegram
@events.register(events.NewMessage(incoming=True, pattern=r'^start_sending \d+'))
async def start_sending_command(event):
    delay = int(event.raw_text.split()[1])
    await start_sending(delay)

@events.register(events.NewMessage(incoming=True, pattern=r'^stop_sending$'))
async def stop_sending_command(event):
    await event.respond('Остановка отправки сообщений')
    raise KeyboardInterrupt

# Получение никнейма клиента
client_nickname = None

@events.register(events.NewMessage(incoming=True))
async def handle_new_message(event):
    global client_nickname

    if client_nickname is None:
        # Получаем информацию о клиенте и его никнейме
        me = await event.client.get_me()
        client_nickname = me.first_name

    sender_nickname = event.sender.first_name
    message_text = event.raw_text

    if client_nickname is not None:
        # Проверяем, совпадает ли никнейм клиента с никнеймом в сообщении
        if client_nickname.lower() in message_text.lower():
            # Извлекаем ссылку на канал из сообщения
            channel_link = message_text.split(':')[1].strip()
            # Выполняем подписку на канал
            await event.client(JoinChannelRequest(channel_link))

# Запуск бота и обработка событий
with TelegramClient('session_name', 'API_ID', 'API_HASH') as client:
    client.add_event_handler(start_sending_command)
    client.add_event_handler(stop_sending_command)
    client.add_event_handler(handle_new_message)
    client.run_until_disconnected()
