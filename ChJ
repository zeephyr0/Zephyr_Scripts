import time
from telethon.sync import TelegramClient, events

api_id001 = '12588062'
api_hash001 = 'd0f061c565991d6ed274285c0d032f7a'
phone001 = '+79816661471'

api_id002 = '13123883'
api_hash002 = 'f1fab12098570c2bf8848ad6ea23c62f'
phone002 = '+79676939873'

api_id003 = '19334807'
api_hash003 = '4b4edde7a9d46172399f0ac4cb98ae63'
phone003 = '+79842549006'

cloud_password1 = '2303'

# Создание клиентов 
client001 = TelegramClient('session001', api_id001, api_hash001)
client002 = TelegramClient('session002', api_id002, api_hash002)
client003 = TelegramClient('session003', api_id003, api_hash003)

# Авторизация
clients1 = [client001, client002, client003]

client001.connect()
if not client001.is_user_authorized():
    client001.send_code_request(phone001)
    try:
        client001.sign_in(phone001, input('Session-001 Введите код подтверждения: '), password=cloud_password1)
    except SessionPasswordNeededError:
        client001.sign_in(password=cloud_password1)

client002.connect()
if not client002.is_user_authorized():
    client002.send_code_request(phone002)
    try:
        client002.sign_in(phone002, input('Session-002 Введите код подтверждения: '), password=cloud_password1)
    except SessionPasswordNeededError:
        client002.sign_in(password=cloud_password1)

client003.connect()
if not client003.is_user_authorized():
    client003.send_code_request(phone003)
    try:
        client003.sign_in(phone003, input('Session-003 Введите код подтверждения: '), password=cloud_password1)
    except SessionPasswordNeededError:
        client003.sign_in(password=cloud_password1)

# Создаем список для хранения ссылок на каналы
channel_links = []

# Функция для подписки на каналы
def join_channel(client, link):
    try:
        client(InviteToChannelRequest(link))
        print(f'Клиент {client.session.user_id} подписался на канал {link}')
    except Exception as e:
        print(f'Ошибка при подписке клиента {client.session.user_id} на канал {link}: {e}')

# Функция для подписки на группу
def join_chat(client):
    try:
        client(JoinChannelRequest('@281'))
        print(f'Клиент {client.session.user_id} присоединился к группе @281')
    except Exception as e:
        print(f'Ошибка при присоединении клиента {client.session.user_id} к группе @281: {e}')

# Функция-обработчик новых сообщений в группе
def handle_group_message(event):
    message_text = event.message.message.lower()
    if message_text.startswith('join'):
        link = message_text.split(' ')[1]
        channel_links.append(link)
        print(f'Добавлена ссылка на канал: {link}')
        for client in clients:
            join_channel(client, link)
            time.sleep(3)
    elif message_text.startswith('join_chat'):
        for client in clients:
            join_chat(client)
            time.sleep(7)

# Запускаем клиентов и подписываемся на события новых сообщений в группе
for client_data in clients:
    with TelegramClient('session_name', client_data['api_id'], client_data['api_hash']) as client:
        client.add_event_handler(handle_group_message, events.NewMessage(chats='group_username'))
        client.run_until_disconnected()
